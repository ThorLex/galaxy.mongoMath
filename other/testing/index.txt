// // Import des modules externes et fonctions utilitaires
// const {
//   countDocumentsPerCollection,
//   listCollectionsAndDocuments,
//   getDatabaseInfo,
// } = require("./dbUtils.js");

// const {
//   watchDatabaseChanges,
//   getStatistics,
// } = require("./dbStatsreplicalSet.js");

// const { calculateStatistics } = require("./dbStats.js");

// // Fonction principale pour lister toutes les collections et leurs documents
// async function main() {
//   try {
//     const data = await listCollectionsAndDocuments();
//     console.log("Toutes les collections et leurs documents:", data);
//   } catch (err) {
//     console.error("Erreur:", err);
//   }
// }

// // Fonction pour compter le nombre de documents dans chaque collection
// async function counting() {
//   try {
//     const counts = await countDocumentsPerCollection();
//     console.log("Nombre de documents par collection:", counts);
//   } catch (err) {
//     console.error("Erreur:", err);
//   }
// }

// // Fonction pour obtenir les informations de la base de données
// async function getInfo() {
//   try {
//     const info = await getDatabaseInfo();
//     console.log("Informations sur la base de données:", info);
//   } catch (err) {
//     console.error("Erreur:", err);
//   }
// }

// // Fonction pour exécuter les statistiques de la base de données sur une période donnée
// async function calculate() {
//   try {
//     const period = process.argv[3] || "day"; // Par défaut 'day', sinon spécifié en ligne de commande
//     const stats = await calculateStatistics({ period });
//     console.log("Statistiques des collections :");
//     console.log(stats);
//   } catch (err) {
//     console.error("Erreur lors du calcul des statistiques :", err);
//   }
// }

// // Fonction pour surveiller les changements dans la base de données
// async function statsss() {
//   await watchDatabaseChanges();

//   // Exemple d'affichage des statistiques toutes les 10 secondes
//   setInterval(() => {
//     const stats = getStatistics();
//     console.log("Statistiques en temps réel :", stats);
//   }, 10000);
// }

// // Routeur pour exécuter les fonctions selon les commandes
// async function executeCommand(command) {
//   switch (command) {
//     case "main":
//       await main();
//       break;
//     case "counting":
//       await counting();
//       break;
//     case "getInfo":
//       await getInfo();
//       break;
//     case "calculate":
//       await calculate();
//       break;
//     case "statsss":
//       await statsss();
//       break;
//     default:
//       console.log(
//         "Commande non reconnue. Utilisez 'main', 'counting', 'getInfo', 'calculate', ou 'statsss'."
//       );
//       break;
//   }
// }

// // Exécuter la commande fournie en argument
// const command = process.argv[2]; // Récupère la commande passée en argument
// executeCommand(command);
// Imports
// Fonction principale et autres exports